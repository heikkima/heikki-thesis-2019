AWSTemplateFormatVersion: 2010-09-09
Description: VPC for EKS sample

Parameters:
  Project:
    Description: Project name
    Type: String
  CidrBlock:
    Description: CIDR block for VPC
    Type: String

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${Project}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${Project}-InternetGateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  #
  # SUBNETS
  #
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt Vpc.CidrBlock, 4, 10 ] ]
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt Vpc.CidrBlock, 4, 10 ] ]
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt Vpc.CidrBlock, 4, 10 ] ]
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt Vpc.CidrBlock, 4, 10 ] ]
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PrivateSubnet2
  #
  # NAT GATEWAYS
  #
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
  #
  # ROUTES
  #
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PublicRouteTable

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PrivateRouteTable

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: !Sub ${Project}-PrivateRouteTable2

  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateInternetRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateInternetRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  # SecurityGroup for control plane
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref Vpc

Outputs:
  VpcId:
    Description: VPC id
    Value: !Ref Vpc
    Export:
      Name: !Sub ${AWS::StackName}:Vpcid
  VpcCidrBlock:
    Description: VPC CIDR block
    Value: !GetAtt Vpc.CidrBlock
    Export:
      Name: !Sub ${AWS::StackName}:Vpc-Cidr
  PublicSubnet1Id:
    Description: Public subnet 1 id
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}:PublicSubnet1Id
  PublicSubnet2Id:
    Description: Public subnet 2 id
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}:PublicSubnet2Id
  PrivateSubnet1Id:
    Description: Private subnet 1 id
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}:PrivateSubnet1Id
  PrivateSubnet2Id:
    Description: Private subnet 2 id
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}:PrivateSubnet2Id
  ControlPlaneSecurityGroup:
    Description: Security group for the cluster control plane communication with worker nodes
    Value: !Ref ControlPlaneSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:ControlPlaneSecurityGroup

